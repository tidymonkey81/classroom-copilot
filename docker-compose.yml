# APOC DOCKER

services:
  cc_frontend:
    container_name: cc_frontend
    build:
      context: ./frontend
    env_file:
      - ./.env
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    networks:
      - app-network
    volumes:
      - data_volume:/data

  cc_backend:
    container_name: cc_backend
    build:
      context: ./backend/app
    env_file:
      - ./.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - data_volume:/data
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - app-network
    devices:
      - "/dev/snd:/dev/snd"
    group_add:
      - "audio"
  
  cc_whisperlive:
    container_name: cc_whisperlive
    build:
      context: ./backend/whisper_live_server
      args:
        WHISPERLIVE_PORT: ${WHISPERLIVE_PORT}
    env_file:
        - ./.env
    environment:
      WHISPERLIVE_PORT: ${WHISPERLIVE_PORT}
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: compute,utility
    volumes:
      - data_volume:/data
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    ports:
      - ${WHISPERLIVE_PORT}:${WHISPERLIVE_PORT}
    networks:
      - app-network
    group_add:
      - "audio"

  cc_neo4j:
    image: neo4j:enterprise
    container_name: cc_neo4j
    environment:
      - NEO4J_AUTH=${NEO4J_USER}/${NEO4J_PASSWORD}
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.meta.data
      - NEO4JLABS_PLUGINS='["apoc"]'
    ports:
      - "${NEO4J_HTTP_PORT}:${NEO4J_HTTP_PORT}"
      - "${NEO4J_BOLT_PORT}:${NEO4J_BOLT_PORT}"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - neo4j_conf:/conf
      - ./conf:/conf
      - ./plugins:/plugins
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  data_volume:
    name: data_volume
    driver: local
  neo4j_data:
    name: neo4j_data
    driver: local
  neo4j_logs:
    name: neo4j_logs
    driver: local
  neo4j_import:
    name: neo4j_import
    driver: local
  neo4j_plugins:
    name: neo4j_plugins
    driver: local
  neo4j_conf:
    name: neo4j_conf
    driver: local